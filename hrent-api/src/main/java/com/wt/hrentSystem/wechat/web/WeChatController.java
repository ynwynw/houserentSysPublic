package com.wt.hrentSystem.wechat.web;import com.wt.hrentSystem.common.config.ResponseCodeCanstants;import com.wt.hrentSystem.common.entity.Page;import com.wt.hrentSystem.common.entity.ResponseResult;import com.wt.hrentSystem.common.entity.User;import com.wt.hrentSystem.common.service.UserService;import com.wt.hrentSystem.common.util.TokenUtils;import com.wt.hrentSystem.common.util.UserUtils;import com.wt.hrentSystem.hrent.entity.HouseResource;import com.wt.hrentSystem.hrent.entity.Pic;import com.wt.hrentSystem.hrent.entity.Tag;import com.wt.hrentSystem.hrent.service.HouseResourceService;import com.wt.hrentSystem.hrent.service.PicService;import com.wt.hrentSystem.hrent.service.TagService;import com.wt.hrentSystem.wechat.entity.WechatUser;import com.wt.hrentSystem.wechat.service.WechatService;import org.apache.ibatis.annotations.Param;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.util.HashMap;import java.util.List;import java.util.Map;@RestController@RequestMapping("wechat")public class WeChatController {    @Autowired    WechatService wechatService;    @Autowired    UserService userService;    @Autowired    HouseResourceService houseResourceService;    @Autowired    PicService picService;    @Autowired    TagService tagService;    @Autowired    UserUtils userUtils;    //微信小程序登录    @RequestMapping("login")    public ResponseResult login(@RequestBody WechatUser wechatUser){        ResponseResult login = wechatService.login(wechatUser);        return login;    }    //微信小程序通过openId登录    @RequestMapping("loginByOpenId")    public ResponseResult loginByOpenId(String openId){        User loginUser = userService.findUserByOpenid(openId);        String token = TokenUtils.sign(loginUser);        //将登录用户和token信息都返回给前端        Map resultMap = new HashMap();        resultMap.put("token",token);        resultMap.put("loginUser",loginUser);        return new ResponseResult(ResponseCodeCanstants.SUCCESS,resultMap,"登录成功");    }    //获取用户手机号    @RequestMapping("getUserNumber")    public ResponseResult getUserNumber(@RequestBody WechatUser wechatUser){        String userNumber = wechatService.getUserNumber(wechatUser);        return new ResponseResult(ResponseCodeCanstants.SUCCESS,userNumber,"获取成功");    }    //查找房源    @RequestMapping("findHousePage")    public ResponseResult findHousePage(@RequestBody HouseResource houseResource, HttpServletRequest request, HttpServletResponse response){        houseResource.setCurrentUser(userUtils.getUser(request));        Page<HouseResource> page = new Page<>(houseResource.getPageNo(),houseResource.getPageSize());        if(houseResource.getTagList()!=null && houseResource.getTagList().size()>0){            houseResource.setTagNum(houseResource.getTagList().size());        }        houseResource.setState(1);        Page<HouseResource> page1 = houseResourceService.findPage(page, houseResource);        return new ResponseResult(ResponseCodeCanstants.SUCCESS,page1,"成功");    }    //模糊搜索房源    @RequestMapping("findHouseByCondition")    public ResponseResult findHouseByCondition(@RequestBody HouseResource houseResource,HttpServletRequest request, HttpServletResponse response){        Page<HouseResource> page = new Page<>(houseResource.getPageNo(),houseResource.getPageSize());        if(houseResource.getTagList()!=null && houseResource.getTagList().size()>0){            houseResource.setTagNum(houseResource.getTagList().size());        }        Page<HouseResource> page1 = houseResourceService.findHouseByConditionPage(page, houseResource);        return new ResponseResult(ResponseCodeCanstants.SUCCESS,page1,"成功");    }    //根据id查询房源    @RequestMapping("getHouseById")    public ResponseResult getHouseById(@RequestBody HouseResource houseResource){        HouseResource houseResource1 = houseResourceService.get(houseResource.getId());        return new ResponseResult(ResponseCodeCanstants.SUCCESS,houseResource1,"查询成功");    }    //标签，    // 查询所有标签    @RequestMapping("findAllTags")    public ResponseResult findAllTags(Tag tag){        List<Tag> list = tagService.findList(tag);        return new ResponseResult(ResponseCodeCanstants.SUCCESS,list,"查询成功");    }    //用户    //根据id查询用户信息    @RequestMapping("getUserById")    public ResponseResult getUserById(@RequestBody User user){        User user1 = userService.get(user.getId());        return new ResponseResult(ResponseCodeCanstants.SUCCESS,user1,"查询成功");    }    //图片    //查询小程序轮播图    @RequestMapping("getPic")    public ResponseResult getPic(@RequestBody Pic pic){        List<Pic> list = picService.findList(pic);        return new ResponseResult(ResponseCodeCanstants.SUCCESS,list,"查询成功");    }}